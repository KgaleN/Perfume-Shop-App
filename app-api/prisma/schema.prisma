generator client{
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url = "mysql://root:123Ntando@localhost:3306/PerfumeAppDb"
}

model Address {
  id            Int    @id @default(autoincrement()) // Primary key
  streetAddress String @db.VarChar(255)
  city          String @db.VarChar(100)
  province      String @db.VarChar(100)

  User User[]
}

model User {
  id        Int     @id @default(autoincrement()) // Primary key
  name      String  @db.VarChar(100)
  phone     String  @db.VarChar(15)
  email     String  @unique @db.VarChar(255)
  password  String  @db.VarChar(255)
  gender    String? @db.VarChar(10)  // Optional field (nullable)
  addressId Int
  address   Address @relation(fields: [addressId], references: [id]) 

  @@map("Users")  // If table name differs in DB
  Cart Cart[]
}

model Perfume {
  id   Int     @id @default(autoincrement())  // Primary key
  name        String  @db.VarChar(100)
  description String? @db.Text                      // Optional (nullable)
  gender      String? @db.VarChar(10)               // Optional (nullable)
  price       Decimal @db.Decimal(18, 0)
  rating      Int?    // Optional (nullable)
  img         Bytes?  // Optional (nullable)
  status      String? @db.VarChar(50)

  @@map("Perfumes")  // Adjust if actual table name differs
  CartItem CartItem[]
}

model Cart {
  id            Int     @id @default(autoincrement())  // Primary key
  cartDate      DateTime
  isCheckedOut  Boolean
  customerId    Int

  customer User @relation(fields: [customerId], references: [id]) // Foreign key relation

  @@map("Carts")  // Adjust if the actual table name differs
  CartItem CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())  // Primary key
  quantity  Int
  cartId    Int
  perfumeId Int

  // Foreign Key Relationships
  cart      Cart    @relation(fields: [cartId], references: [id])
  perfume   Perfume @relation(fields: [perfumeId], references: [id])

  @@map("CartItems")  // Adjust if table name differs
}

